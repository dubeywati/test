name: Main Branch PR Workflow

on:
  workflow_dispatch:
    inputs:
      branch_name:
        required: true
        type: string
      PR_ISSUE_NUMBER:
        required: true
        type: string
      PR_REPO_OWNER:
        required: true
        type: string 
      PR_REPO_NAME:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check Inputs
      run: |
        echo "Branch Name: ${{ github.event.inputs.branch_name }}"
        echo "PR Issue Number: ${{ github.event.inputs.PR_ISSUE_NUMBER }}"
        echo "PR Repo Owner: ${{ github.event.inputs.PR_REPO_OWNER }}"
        echo "PR Repo Name: ${{ github.event.inputs.PR_REPO_NAME }}"
        
    - name: Checkout  
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Build
      run: dotnet build --configuration Release

    - name: Execute Regression Test
      run: dotnet test --logger "trx;LogFileName=test-results.trx"

    - name: Generate Regression Test Report
      id : report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Regression Test Report
        path: "**/test-results.trx"                            
        reporter: dotnet-trx     
        fail-on-error: true
    
    - name: Comment on Main PR
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.PAT_TOKEN }}
        script: |
          const issue_number = parseInt('${{ github.event.inputs.PR_ISSUE_NUMBER }}');
          const repo_owner = "${{ github.event.inputs.PR_REPO_OWNER }}";
          const repo_name = "${{ github.event.inputs.PR_REPO_NAME }}";

          const resultsMessage = `üéâ Test Results üéâ
          ‚úÖ Passed: ${{ steps.report.outputs.passed }}
          ‚ùå Failed: ${{ steps.report.outputs.failed }}
          ‚è≠Ô∏è Skipped: ${{ steps.report.outputs.skipped }}`;

          github.rest.issues.createComment({
            issue_number: issue_number,
            owner: repo_owner,
            repo: repo_name,
            body: resultsMessage
          })
