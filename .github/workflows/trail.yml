name: Run Project in Trail Folder

on:
  workflow_dispatch:
    inputs:
      branch_name:
        required: true
        type: string 
      PR_ISSUE_NUMBER:
        required: true
        type: string
      PR_REPO_OWNER:
        required: true
        type: string 
      PR_REPO_NAME:
        required: true 
        type: string   

env:
  username: "${{github.actor}}"
  branch: "${{ github.event.inputs.branch_name }}"

jobs:
  build:
    runs-on: ubuntu-latest

    steps: 
    - uses: oNaiPs/secrets-to-env-action@v1
      with:
        secrets: ${{ toJSON(secrets) }}

    - name: Checkout  
      uses: actions/checkout@v2

    - name: Navigate to Trail Folder
      run: cd Trail

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Build TrailAutomation.sln
      run: dotnet build --configuration Release -p:RestorePackages=false "TrailAutomation.sln"
      
    - name: Execute Regression Test
      run: dotnet test --logger "trx;LogFileName=test-results.trx"  "Trail/TestAutomation/TestAutomation.csproj"


    - name: Generate Regression Test Report
      id : report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Regression Test Report
        path: "**/test-results.trx"                            
        reporter: dotnet-trx     
        fail-on-error: false
    
    - name: Comment on Main PR
      uses: actions/github-script@v5
      if: always()
      with:
        github-token: ${{secrets.PAT_TOKEN}}
        script: |
            const issue_number = parseInt('${{ inputs.PR_ISSUE_NUMBER }}');
            const repo_owner = "${{ inputs.PR_REPO_OWNER }}";
            const repo_name = "${{ inputs.PR_REPO_NAME }}";
    
            github.rest.issues.createComment({
              issue_number: issue_number,
              owner: repo_owner,
              repo: repo_name,
               body: `üéâ Trail env Results üéâ

                      ‚úÖ Passed: ${{ steps.report.outputs.passed }}
                      ‚ùå Failed: ${{ steps.report.outputs.failed }}
                      ‚è≠Ô∏è Skipped: ${{ steps.report.outputs.skipped }}
                      
                      Keep up the good work! üëç`
            })
